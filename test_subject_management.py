#!/usr/bin/env python3
"""
Script test ch·ª©c nƒÉng qu·∫£n l√Ω m√¥n h·ªçc
"""
import requests
import json

BASE_URL = "http://127.0.0.1:8000"


def test_subject_management():
    """Test c√°c ch·ª©c nƒÉng qu·∫£n l√Ω m√¥n h·ªçc"""

    print("üß™ Testing Subject Management API...")

    # Test 1: L·∫•y danh s√°ch m√¥n h·ªçc
    print("\n1. L·∫•y danh s√°ch m√¥n h·ªçc hi·ªán t·∫°i:")
    try:
        response = requests.get(f"{BASE_URL}/subjects/")
        if response.status_code == 200:
            subjects = response.json()
            print(f"‚úÖ Th√†nh c√¥ng! C√≥ {len(subjects)} m√¥n h·ªçc:")
            for subject in subjects:
                print(f"   - ID: {subject['id']}, T√™n: {subject['name']}, M√£: {subject.get('code', 'N/A')}")
        else:
            print(f"‚ùå L·ªói: {response.status_code}")
    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")

    # Test 2: T·∫°o m√¥n h·ªçc m·ªõi
    print("\n2. T·∫°o m√¥n h·ªçc m·ªõi:")
    new_subject = {
        "name": "L·∫≠p tr√¨nh Python",
        "code": "PYTHON",
        "description": "M√¥n h·ªçc v·ªÅ l·∫≠p tr√¨nh Python c∆° b·∫£n v√† n√¢ng cao"
    }

    try:
        response = requests.post(f"{BASE_URL}/subjects/", json=new_subject)
        if response.status_code == 200:
            created_subject = response.json()
            print(f"‚úÖ Th√†nh c√¥ng! ƒê√£ t·∫°o m√¥n h·ªçc:")
            print(f"   - ID: {created_subject['id']}")
            print(f"   - T√™n: {created_subject['name']}")
            print(f"   - M√£: {created_subject['code']}")
            print(f"   - M√¥ t·∫£: {created_subject['description']}")

            subject_id = created_subject['id']
        else:
            print(f"‚ùå L·ªói t·∫°o m√¥n h·ªçc: {response.status_code}")
            print(f"   Response: {response.text}")
            return
    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")
        return

    # Test 3: C·∫≠p nh·∫≠t m√¥n h·ªçc
    print("\n3. C·∫≠p nh·∫≠t m√¥n h·ªçc:")
    updated_subject = {
        "name": "L·∫≠p tr√¨nh Python N√¢ng cao",
        "code": "PYTHON_ADV",
        "description": "M√¥n h·ªçc v·ªÅ l·∫≠p tr√¨nh Python n√¢ng cao v·ªõi c√°c framework"
    }

    try:
        response = requests.put(f"{BASE_URL}/subjects/{subject_id}", json=updated_subject)
        if response.status_code == 200:
            updated = response.json()
            print(f"‚úÖ Th√†nh c√¥ng! ƒê√£ c·∫≠p nh·∫≠t m√¥n h·ªçc:")
            print(f"   - T√™n m·ªõi: {updated['name']}")
            print(f"   - M√£ m·ªõi: {updated['code']}")
            print(f"   - M√¥ t·∫£ m·ªõi: {updated['description']}")
        else:
            print(f"‚ùå L·ªói c·∫≠p nh·∫≠t: {response.status_code}")
            print(f"   Response: {response.text}")
    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")

    # Test 4: L·∫•y th√¥ng tin m√¥n h·ªçc c·ª• th·ªÉ
    print("\n4. L·∫•y th√¥ng tin m√¥n h·ªçc c·ª• th·ªÉ:")
    try:
        response = requests.get(f"{BASE_URL}/subjects/{subject_id}")
        if response.status_code == 200:
            subject = response.json()
            print(f"‚úÖ Th√†nh c√¥ng! Th√¥ng tin m√¥n h·ªçc:")
            print(f"   - ID: {subject['id']}")
            print(f"   - T√™n: {subject['name']}")
            print(f"   - M√£: {subject['code']}")
            print(f"   - M√¥ t·∫£: {subject['description']}")
        else:
            print(f"‚ùå L·ªói l·∫•y th√¥ng tin: {response.status_code}")
    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")

    # Test 5: X√≥a m√¥n h·ªçc (t√πy ch·ªçn)
    print("\n5. X√≥a m√¥n h·ªçc (t√πy ch·ªçn):")
    choice = input("B·∫°n c√≥ mu·ªën x√≥a m√¥n h·ªçc v·ª´a t·∫°o kh√¥ng? (y/n): ")
    if choice.lower() == 'y':
        try:
            response = requests.delete(f"{BASE_URL}/subjects/{subject_id}")
            if response.status_code == 200:
                print(f"‚úÖ Th√†nh c√¥ng! ƒê√£ x√≥a m√¥n h·ªçc ID {subject_id}")
            else:
                print(f"‚ùå L·ªói x√≥a: {response.status_code}")
                print(f"   Response: {response.text}")
        except Exception as e:
            print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")
    else:
        print("‚è≠Ô∏è B·ªè qua vi·ªác x√≥a m√¥n h·ªçc")

    # Test 6: Ki·ªÉm tra danh s√°ch cu·ªëi c√πng
    print("\n6. Danh s√°ch m√¥n h·ªçc sau khi test:")
    try:
        response = requests.get(f"{BASE_URL}/subjects/")
        if response.status_code == 200:
            subjects = response.json()
            print(f"‚úÖ C√≥ {len(subjects)} m√¥n h·ªçc:")
            for subject in subjects:
                print(f"   - ID: {subject['id']}, T√™n: {subject['name']}, M√£: {subject.get('code', 'N/A')}")
        else:
            print(f"‚ùå L·ªói: {response.status_code}")
    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")


if __name__ == "__main__":
    test_subject_management() 